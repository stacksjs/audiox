---
description: TypeScript Usage specifics
globs: docs/**/*.md
---
## TypeScript Usage

## Type Definitions
- Define interfaces for all audio configuration options
- Use strict typing for audio parameters
- Define types for metadata structures
- Use enums for supported codecs and formats

## Audio Processing Types
- Type FFmpeg command arguments properly
- Define stream and buffer types clearly
- Use proper typing for async operations
- Include error types and handling

## Configuration Types
- Define configuration interface structure
- Use proper types for audio settings
- Include metadata type definitions
- Define CLI option types

## Stream Processing Types
- Define stream interfaces
- Type buffer operations properly
- Include progress callback types
- Define error callback types

## Utility Types
- Create utility types for common operations
- Define type guards for validation
- Include helper type functions
- Document type constraints

## Type Safety
- Enforce strict null checks
- Use proper type assertions
- Implement proper error types
- Include TypeScript examples

- Use TypeScript for all code; prefer interfaces over types
- Avoid enums; use `maps` instead, or `as const`
- Use functional components with TypeScript interfaces
