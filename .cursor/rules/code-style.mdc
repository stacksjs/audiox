---
description: Code Style & Structure specifics
globs:
---
## Code Style & Structure

- Write concise, technical TypeScript code with accurate examples in the docblock
- If Bun native modules are available, use them
- Use functional and declarative programming patterns; avoid classes unless needed
- Prefer iteration and modularization over code duplication
- Use descriptive variable names with auxiliary verbs (e.g., `isLoading`, `hasError`)
- Use proper jsdoc comments for functions, types, interfaces, and ensure examples are accurate

## Audio Processing Guidelines
- Use consistent units for audio parameters (e.g., 'k' suffix for bitrates: '128k', '192k')
- Sample rates should be specified as integers (8000, 16000, 44100, 48000)
- Channel counts should be numeric (1 for mono, 2 for stereo, etc.)
- Metadata keys should follow standard ID3 tag conventions

## FFmpeg Integration
- Always provide full FFmpeg argument arrays for clarity
- Use consistent argument ordering: input, codec, bitrate, channels, sample rate, metadata
- Document any FFmpeg-specific behavior or requirements

## Stream Processing
- Always clean up resources after stream processing
- Use appropriate error handling for stream operations
- Implement proper stream backpressure handling

## Type Safety
- Use strong typing for all audio configuration options
- Validate audio parameters before passing to FFmpeg
- Provide type definitions for all public APIs

## Testing
- Include test cases for different audio formats
- Test both success and error scenarios
- Verify audio metadata handling
- Test stream processing with various chunk sizes
